{"version":3,"sources":["pregled.js","pregledPritisak.js","PregledSecer.js","pregledHolesterol.js","dateFormatter.js","pacijent.js","doktor.js","index.js"],"names":["Pregled","datumIVreme","pacijent","doktor","contructor","Error","_datumIVreme","_pacijent","_doktor","setDatumIVreme","datum","getDatumIVreme","setPacijent","getPacijent","setDoktor","getDoktor","PregledPritisak","_gVrednost","_dVrednost","_puls","setGVrednost","gVrednost","getGVrednost","setDVrednost","dVrednost","getDVrednost","setPuls","puls","getPuls","PregledSecer","_vrednost","_vremePoslednjegObroka","setVrednost","vrednost","getVrednost","setVremePoslednjegObroka","vremePoslednjegObroka","getVremePoslednjegObroka","PregledHolesterol","format","date","getDate","getMonth","getFullYear","getHours","getMinutes","Pacijent","ime","prezime","jmbg","brojKartona","_ime","_prezime","_jmbg","_brojKartona","setIme","getIme","setPrezime","getPrezime","setJmbg","_jbmg","getJmbg","setBrojKartona","getBrojKartona","console","log","Date","pacijenti","getPacijenti","push","setPacijenti","pregled","Math","random","Doktor","specijalnost","_specijalnost","_pacijenti","setSpecijalnost","getSpecijalnost","tipPregleda","izaberiDoktora","pregledSecer","zakaziPregled","pregledPritisak","izvrsiPregled"],"mappings":";;AOAA;;AACA;;;ALDA,AECA,AEDA,ADAA,AFAA,AFAA,SGCSuC,MAAT,CAAgBC,IAAhB,EAAqB;AAEjB,AGDJ,IAAItC,KHCOsC,GGDC,CHCG,CAACC,CGDD,IAAIK,EHCR,KAAiB,GAAjB,IAAwBN,GGDpB,CHCwB,AGDX,CHCYE,OGDzB,CHCoB,CGDG,IHCe,CAA1C,IAA+C,GAA/C,AGDI,EAAqC,CHCYF,IAAI,CAACG,IGDtD,EAAiD,CAAjD,CAAf,GHCgE,EAArD,GAA0E,GAA1E,GAAgFH,IAAI,CAACI,QAAL,EAAhF,GAAkG,GAAlG,GAAwGJ,IAAI,CAACK,UAAL,EAA/G;AACH,AEHD,ACEA,AFFA,IEEI1C,APHEH,MOGI,GAAG,CPFT,GOEa0E,cPFDzE,COEH,CAAW,OAAX,EAAoB,APF7B,EAAyBC,QAAzB,EOES,APF0BC,EOEQ,IPF3C,EAA0C,QOEjC,CAAb;AACAD,APH8C,QOGtC,CAAC+E,cAAT,CAAwB9E,MAAxB;ADFA,ACGA,AFHA,IEGI+E,WHAW3C,CGAC,GAAGpC,MAAM,CAACgF,aAAP,CAAqBjF,QAArB,EAA+B,mBAA/B,CAAnB;AACA,APJQ,IOIJkF,eAAe,GAAGjF,MAAM,CAACgF,aAAP,CAAqBjF,QAArB,EAA+B,iBAA/B,CAAtB;ADHA,ACIAA,AFJA,ALAQ,MAAI,EOIJ,CAACmF,EPJQjF,UAAL,COIZ,CAAuB8E,GPJSlF,OAAxB,EOIR,APJwC;AOKxCE,APJY,QOIJ,CAACmF,CPJS,IAAIhF,KAAJ,CAAU,EOI5B,CAAuB+E,eAAvB,oBPJkB,CAAN;AACH,GAJqC,CAMtC;;;AACA,MAAI9E,YAAY,GAAGL,WAAnB;AACA,MAAIM,SAAS,GAAGL,QAAhB;AACA,MAAIM,OAAO,GAAGL,MAAd;;AAEA,OAAKM,cAAL,GAAsB,UAASC,KAAT,EAAgB;AAACJ,IMRzCoE,ADCA5B,ALOyCxC,YAAY,GAAGI,KAAf;AAAqB,GAA5D;IEVFmB,ACDAS,AFAAtB;AKIF,ADCA,ALOI,OAAKL,WMRGoC,EDCAA,CCDZ,ANQI,EMRaC,ADCjB,CLO0B,CKPTA,KCDjB,EAA0B2B,ADC1B,EAA0B1B,ELOU,EKPpC,EAAgCC,ICDhC,EAAuC,KDCvC,EAA4C;ACDL,ADCK,ALOP,WAAO5C,YAAP;AAAoB,GAArD;AMPA,ADCA;AHJJ,AIII,ADCA,ALOA,AGbJ,AFAA,ODaSM,CMRDuC,ADCAA,ICDI,ADCA,GCDGJ,ADCAA,GCDX,ADCA,ALOA,GAAmB,GEZXrC,GDDAA,ECCZ,ACDYA,EDCOR,AFYcA,CCbjC,EEAA,AFAmBA,EEAAA,GDCnB,AFYuB,EEZMC,AFYc,CCb3C,EEAA,AFA6BA,EEAAA,CDC7B,EAAoC,CDDpC,EEAA,AFAoC,EEAA;ADCA,AIKhC,ADCA,ALMwCI,AGbR,AFAA,IDaQA,IMPpC6C,ADCAA,KLM6C,GMPrC,ADCA,ALMwClD,GMPrC8C,ADCAA,KLMyB,EMPxC,ADCA;ACAA,ADCA,ALK6D,GAA7D,KMNI4B,ADCAvB,KAAK,GAAGJ,IAAZ,CCDiB,GAAG0B,YAApB;AJNgC,AIOhC,ADCA,AFTgC,AFAA,QKQ5BE,ADCAvB,UCDU,EDCE,CCDC,EAAjB,ADCmBJ,CCNgB,CAMnC,SDAA;AACA,ALIA,OAAKrC,CKJDL,OAAO,GAAG,ALId,GAAmB,CKJnB,CANwC,CAOxC,SLG+B;AEZ/B,AIQA,ANIgC,AGbhC,AFAA,SKSK+C,ENIkChD,IMJvC,GAAc,ENIkB,QMJTwC,GAAT,EAAc,qDJRtBrC,GDDAA,ECCN,ACDMA,EDCOR,CDDb,EEAA,AFAaA,EEAAA,GDCb,EAAuBC,CDDvB,EEAA,AFAuBA,EEAAA,CDCvB,GADgC,ADAhC,CCGA,CCHA,CFDgC,CAEhC,CEFgC,CAGhC;AGO8BgD,ADE9B,ALEiD,GAAjD,GMJ8BA,GDEzBI,CCF6B,GAAGR,EDErC,CCF8B,EDEhB,UAASA,GAAT,EAAc;AHP5B,AIKyC,ADEXI,AFR9B,AFDA,KKOA,CDE8BA,EHP1BrB,ACDAA,AFDAb,EIS8B,GAAG8B,GAAP,CHPjB,ACDA,CFDC,ECEE,ACDA,CFDC,GCEjB,ACDA,CFDA;ACGA,AGMyC,ALIzC,AGXA,AFDA,KIQA,ELIKjC,CEVDiB,ACDAA,AFDAb,QDYJ,ECZc,CDYG,ECZA,IAAjB,IDY2Bf,CEVD,ACDA,GDCG,ACDA,EHWZ,EEVjB,AFUmC,AGXnC,CDJgC,ACDA,CDQhC,ACDA;AGIA,ANKoCK,ACXpC,IDWoCA,ICXhCW,CKMCqC,ENKsC,ECXlC,CDWqCrD,CML9C,CLNY,EKME,ENKsB,ACXpC,CALgC,CAOhC,QKIyB;AJFzB,AIE0B,ADE1B,ALGqD,AGRrD,GHQA,MKHKqD,CHJAxB,ACDAA,GGG4BmB,EDEjC,ECF0B,CDEZ,GHJd,ACDA,GDCmB,ACDA,MEKM,IHJGlB,ACDAA,QDCT,ACDA,EDCmB,ACDA;ADCCH,AIED,ADEZ,AFLaA,AFAvC,KKGA,CJFuCA,ACDAA,IFAlCV,GIK4B+B,EHJe,ACDA,EEKtB,CHJyBlB,ACDAA,IFAnD,GAAoB,CCCmB,ACDA,SFAVZ,SAAT,EAAoB;ACCoB,AGItB,ALItC,AGT4D,AFAnBJ,KCCzC,AGIA,AFLA,CFAyCA,CDSpCF,SAAL,ACTmD,GDSlC,ACTqCM,SAAb,GDSZ;AML7B,ANK8B,ACTkC,KAAhE,IKIKoC,ENKgCjD,OAAP,CML9B,GAAkB,UAASwC,OAAT,EAAiB;AJFnC,AIEoCI,ADEpC,ALG6C,AGR7C,GHQA,GMLoCA,GDE/BK,CHJAvB,ACDAA,IGGuC,GAAGc,EDE/C,EHJA,ACDA,CEKkB,EHJC,AIEiB,AHHjB,QEKQA,IHJG,ACDA,GEKZ,EAAiB;AHJJ,AIEwB,ADEnBI,ALMvC,AGXkC,AFA/B,KKGA,CDEoCA,IJL/B9B,GCCiCQ,ACDAA,CEKM,GAAGkB,KHJhB,ACDA,AFA/B,EIKoC,CJLhB,YAAW;ACCiB,AGIO,AFLP,AFAhB,KCChC,AGIA,AFLA,QFAuC/B,UAAP;AKIhC,ALJkD,KAAlD,IKIKyC,MNSE1D,IMTP,GAAkB,YAAU;AJD5B,AIC6B,ADE7B,AFJA,SEIK0D,CHHAvB,ACDAA,GGE+BiB,MDEpC,ECF6B,CDEX,YHHlB,AGG4B,AFJ5B,GDCgC,ACDA,UDCShB,ACDAA,qBDCT,ACDA,EDCgC,ACDA;ADCCL,AICpB,ADEhB,AFJoCA,AFAjE,KKEA,CJDiEA,ACDAA,IFA5DR,GII+B6B,QAAP,CJJ7B,GAAoB,GCCmE,ACDA,GDCGhB,ACDAA,IFA7DZ,SAAT,EAAoB,MCCyB,ACDA;ADC+C,AGGnE,AFJmE,AFAvEN,KCCzC,AGGA,AFJA,CFAyCA,UAAU,GAAGM,SAAb;AKGzC,ALHgE,KAAhE,IKGKsD,eAAL,GAAuB,UAASH,YAAT,EAAsB;AJD7C,AIC8CC,ADE9C,AFJA,MGE8CA,GDEzCjB,CHHAtB,ACDAA,MEIL,GCF2D,ADE5C,GCF+CsC,ODEtC1B,IAAT,CHHf,AIC8C,AHF9C,CEI8B,EHHE,ACDA,YDCW,ACDA;ADCC,AIC+B,ADE5CW,AFJa,AFA5C,KKEA,CDE+BA,IJJ1BnC,CII+B,EHHeM,ACDAA,CEIZkB,IAAR,IJJ/B,GAAoB,UCCwB,ACDA,EFAb;ACC2C,AGG9B,AFJ8B,AFA1C,KCChC,AGGA,AFJA,QFAuC/B,UAAP;AKGhC,ALHkD,KAAlD,IKGK6D,eAAL,GAAuB,YAAU;AJdD,AIcE,ADElC,AFjBgC,SEiB3BlB,ICFoCe,GDEzC,GAAe,OCFmB,KDER;AHD7B,AID0D,ADE5B,AFJ9B,AFCG,KKCA,KLDKlD,GIG6B2B,IJHlC,CIG2B,EJHZ,UAAS1B,IAAT,EAAe;AIGU,AJHTR,KIG/B,CJH+BA,KAAK,GAAGQ,IAAR;AKE/B,ALF4C,KAA5C,IKEK2C,YAAL,GAAoB,UAASH,SAAT,EAAmB;AAACU,ADExC,EHlBmB7E,ACDKA,IGiBgB6E,GDEnCf,OCF6C,GAAGK,IDErD,GAAsB,ECFkB,QDETjB,WAAT,EAAsB;ACFmB,ADElBI,AJH7C,KKCA,CDE6CA,IJHxC1B,OAAL,CIGyD,EJH1C,CIG6CsB,WAAf,AJHnB;AIG8C,AJH7C,KIG3B,QJHkC/B,ECG3BU,ACHAS,GFAoB;AKE3B,ALFwC,KAAxC,IKEK8B,YAAL,GAAoB,YAAU;AAAC,ADE/B,SAAKL,ICFiCc,UAAP,ADE/B,GAAsB,YAAU;ACFiB,ADEhB,AJnBD,KKiBhC,QDEwCvB,YAAP;AAAoB,AJDxD,KICG;ACDAU,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,4BAAO,IAAIC,IAAJ,EAAP,CAAP,GAA4B,oBAA5B,GAAmDf,IAA/D;AACH,ADCG,SAAKrC,SAAL,GAAiB,UAASX,MAAT,EAAgB;AAACK,EJrBZR,I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","file":"medical institution.e31bb0bc.js","sourceRoot":"..","sourcesContent":["class Pregled{\n    constructor(datumIVreme, pacijent, doktor){\n        //abstract\n        if (this.contructor === Pregled){\n            throw new Error(\"Ne sme se instancirati klasa Pregled\");\n        }\n\n        //private fields\n        let _datumIVreme = datumIVreme;\n        let _pacijent = pacijent;\n        let _doktor = doktor;\n\n        this.setDatumIVreme = function(datum) {_datumIVreme = datum};\n        this.getDatumIVreme = function(){return _datumIVreme};\n\n        this.setPacijent = function (pacijent) {_pacijent = pacijent};\n        this.getPacijent = function () {return _pacijent};\n\n        this.setDoktor = function (doktor) {_doktor = doktor};\n        this.getDoktor = function () {return _doktor};\n\n\n    }\n}\nexport default Pregled;","import Pregled from './pregled'\nclass PregledPritisak extends Pregled{\n    constructor(datum, pacijent, doktor){\n        super(datum, pacijent, doktor);\n        //private fields\n        let _gVrednost = null;\n        let _dVrednost = null;\n        let _puls = null;\n\n        //getters and setters\n        this.setGVrednost = function(gVrednost) {_gVrednost = gVrednost};\n        this.getGVrednost = function() {return _gVrednost};\n\n        this.setDVrednost = function(dVrednost) {_dVrednost = dVrednost};\n        this.getDVrednost = function() {return _dVrednost};\n\n        this.setPuls = function(puls) {_puls = puls};\n        this.getPuls = function() {return _puls};\n\n\n    }\n}\nexport default PregledPritisak;","import Pregled from \"./pregled\";\n\nclass PregledSecer extends Pregled{\n    constructor(datum, pacijent, doktor){\n        super(datum, pacijent, doktor);\n\n        //private fields\n        let _vrednost = null;\n        let _vremePoslednjegObroka = null;\n\n        //getters and setters\n        this.setVrednost = function(vrednost) {_vrednost = vrednost};\n        this.getVrednost = function() {return _vrednost};\n\n        this.setVremePoslednjegObroka = function(vremePoslednjegObroka) {_vremePoslednjegObroka = vremePoslednjegObroka};\n        this.getVremePoslednjegObroka = function() {return _vremePoslednjegObroka};\n\n\n    }\n}\nexport default PregledSecer;","import Pregled from './pregled'\nclass PregledHolesterol extends Pregled{\n    constructor(datum, pacijent, doktor){\n        super(datum, pacijent, doktor);\n\n        //private fields\n        let _vrednost = null;\n        let _vremePoslednjegObroka = null;\n\n        //getters and setters\n        this.setVrednost = function(vrednost) {_vrednost = vrednost};\n        this.getVrednost = function() {return _vrednost};\n\n        this.setVremePoslednjegObroka = function(vremePoslednjegObroka) {_vremePoslednjegObroka = vremePoslednjegObroka};\n        this.getVremePoslednjegObroka = function() {return _vremePoslednjegObroka};\n    }\n}\nexport default PregledHolesterol;","\nfunction format(date){\n    \n    return date.getDate() + \".\" + (date.getMonth() + 1) + \".\" + date.getFullYear() + \" \" + date.getHours() + \":\" + date.getMinutes();\n}\nexport default format;\n\n","import PregledPritisak from \"./pregledPritisak\";\nimport PregledSecer from \"./PregledSecer\";\nimport PregledHolesterol from \"./pregledHolesterol\";\nimport format from './dateFormatter';\n\nclass Pacijent {\n    constructor(ime, prezime, jmbg, brojKartona){\n        //private fields\n        let _ime = ime;\n        let _prezime = prezime;\n        let _jmbg = jmbg;\n        let _brojKartona = brojKartona;\n        let _doktor = null;\n        //getters setters\n        this.setIme = function(ime) { _ime = ime};\n        this.getIme = function() {return _ime};\n        this.setPrezime = function(prezime){_prezime = prezime};\n        this.getPrezime = function(){return _prezime};\n        this.setJmbg = function(jmbg) {_jbmg = jmbg};\n        this.getJmbg = function() {return _jmbg};\n        this.setBrojKartona = function(brojKartona) {_brojKartona = brojKartona};\n        this.getBrojKartona = function(){return _brojKartona};\n        this.setDoktor = function(doktor){_doktor = doktor};\n        this.getDoktor = function(){return _doktor};\n        console.log(\"[ \" + format(new Date()) + \" ] Kreiran pacijent \" + _ime);\n\n    }\n    izaberiDoktora(doktor){\n        console.log(\"[ \" + format(new Date()) + \" ] Pacijent \" + this.getIme() + \" bira doktora \" + doktor.getIme() + \" za svog izabranog lekara.\");\n        this.setDoktor(doktor);\n        let pacijenti = doktor.getPacijenti();\n        pacijenti.push(this);\n        doktor.setPacijenti(pacijenti);\n    }\n    izvrsiPregled(pregled){\n        if (pregled instanceof PregledPritisak){\n            pregled.setDVrednost(Math.random() * 100);\n            pregled.setGVrednost(Math.random() * 100);\n            pregled.setPuls(Math.random() * 100);\n            console.log(\"[ \"+ format(new Date()) +\" ] Pacijent \" + this.getIme() + \" obavlja laboratorijski pregled za merenje krvnog pritiska. Donja vrednost:\"\n             + pregled.getDVrednost() + \" gornja vrednost: \" + pregled.getGVrednost() + \" puls: \" + pregled.getPuls());\n\n        }else if (pregled instanceof PregledSecer){\n            console.log(pregled);\n            pregled.setVrednost(Math.random() * 100);\n            pregled.setVremePoslednjegObroka(new Date());\n            console.log(\"[ \"+ format(new Date()) +\" ] Pacijent \" + this.getIme() + \" obavlja laboratorijski pregled za merenje nivoa secera u krvi. vrednost:\"\n            + pregled.getVrednost() + \" poslednji obrok: \" + format(pregled.getVremePoslednjegObroka()));\n\n        }else if (pregled instanceof PregledHolesterol){\n            pregled.setVrednost(Math.random() * 100);\n            pregled.setVremePoslednjegObroka(new Date());\n            console.log(\"[ \"+ format(new Date()) +\" ] Pacijent \" + this.getIme() + \" obavlja laboratorijski pregled za merenje holesterola. vrednost:\"\n            + pregled.getVrednost() + \" poslednji obrok: \" + format(pregled.getVremePoslednjegObroka()));\n        }else{\n            throw new Error(\"Nepostojeci pregled\");\n        }\n    }\n    \n\n}\nexport default Pacijent;","import PregledPritisak from \"./pregledPritisak\";\nimport PregledHolesterol from './pregledHolesterol';\nimport PregledSecer from './PregledSecer';\nimport format from './dateFormatter'\nclass Doktor{\n    constructor(ime, prezime, specijalnost){\n        //private fields\n        let _ime = ime;\n        let _prezime = prezime;\n        let _specijalnost = specijalnost;\n        let _pacijenti = [];\n        //getters setters\n        this.setIme = function(ime) { _ime = ime};\n        this.getIme = function() {return _ime};\n        this.setPrezime = function(prezime){_prezime = prezime};\n        this.getPrezime = function(){return _prezime};\n        this.setSpecijalnost = function(specijalnost){_specijalnost = specijalnost};\n        this.getSpecijalnost = function(){return _specijalnost};\n        this.setPacijenti = function(pacijenti){_pacijenti = pacijenti};\n        this.getPacijenti = function(){return _pacijenti};\n        console.log(\"[ \" + format(new Date()) + \" ] Kreiran doktor \" + _ime);\n    }\n    zakaziPregled(pacijent, tipPregleda, datum){\n        switch(tipPregleda){\n            case \"PregledPritisak\":\n                console.log(\"[ \"+ format(new Date()) +\" ] Doktor \" + this.getIme() + \" zakazuje pregled za merenje krvnog pritiska za pacijenta \" + pacijent.getIme());\n                return new PregledPritisak(datum, pacijent, this);\n            case \"PregledSecer\":\n                console.log(\"[ \"+ format(new Date()) +\" ] Doktor \" + this.getIme() + \" zakazuje pregled za merenje secera u krvi za pacijenta \" + pacijent.getIme());\n                return new PregledSecer(datum, pacijent, this);\n            case \"PregledHolesterol\":\n                console.log(\"[ \"+ format(new Date()) +\" ] Doktor \" + this.getIme() + \" zakazuje pregled za merenje holesterola u krvi za pacijenta \" + pacijent.getIme());\n                return new PregledHolesterol(datum, pacijent, this);\n\n\n        }\n    }\n}\n\nexport default Doktor;","import Pacijent from './pacijent';\nimport Doktor from './doktor';\nlet pacijent = new Pacijent(\"Dragan\", \"Milankovic\", 1231241251, 1);\nlet doktor = new Doktor(\"Milan\", \"Draganovic\", \"specijalnost\");\npacijent.izaberiDoktora(doktor);\nlet pregledSecer = doktor.zakaziPregled(pacijent, \"PregledHolesterol\");\nlet pregledPritisak = doktor.zakaziPregled(pacijent, \"PregledPritisak\");\npacijent.izvrsiPregled(pregledSecer);\npacijent.izvrsiPregled(pregledPritisak);"]}